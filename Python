Atividade 1

 
import sys
import commands
import os
import gzip
from datetime import datetime, timedelta
from shutil import copyfileobj
 

for database in database:
 
    fo = open("log", "wb")
    generateSyntaxBackup   = database+"_"+datetime.now().strftime('%d%m%Y')+".sql"
    deleteOldBackup = directorybackup+database+"_"+(datetime.now()-timedelta(days=retention)).strftime('%d%m%Y')+".sql"
    cmd   = "mysqldump -h "+host+" -u "+user+" --password="+password+" "+database+" --single-transaction --master-data=2 > "+directorybackup+generateSyntaxBackup
    fo.write(datetime.now().strftime('%a, %d %b %Y %H:%M:%S')+" Backup "+database+" running.\n")
    
    commands.getoutput(cmd)
    
    checkingBackup   = open(directorybackup+generateSyntaxBackup)
    checkingBackupFiles = checkingBackup.readline()
    fo.write(datetime.now().strftime('%a, %d %b %Y %H:%M:%S')+" Backup "+database+" successfully executed.\n")
    # Delete old Backup
    if len(checkingBackupFiles) > 1:
        try:
            os.remove(deleteOldBackup)
        except OSError:
            pass
        except Error:
            pass
    else:
        pass
   
    checkingBackup.close()
   
    fo.write(datetime.now().strftime('%a, %d %b %Y %H:%M:%S')+" Backup "+database+" being compacted.\n")
    f_in = open(directorybackup+generateSyntaxBackup, 'rb')
    f_out = gzip.open(directorybackup+generateSyntaxBackup+'.gz', 'wb')
    f_out.writelines(f_in)
    f_out.close()
    f_in.close()
    fo.write(datetime.now().strftime('%a, %d %b %Y %H:%M:%S')+" Backup "+database+" packed with success.\n")
    os.remove(directorybackup+generateSyntaxBackup)
    fo.close()

sys.exit(0)








Atividade 2

import random
import rstr
import datetime


def gen_age():
    # gera numeros inteiros entre 15 e 99
    return random.randint(15, 99)


def gen_cpf():
    # gera uma string com 11 caracteres numericos
    return rstr.rstr('1234567890', 11)


def gen_phone():
    # gera um telefone no formato (xx) xxxx-xxxx
    return '({0}) {1}-{2}'.format(
        rstr.rstr('1234567890', 2),
        rstr.rstr('1234567890', 4),
        rstr.rstr('1234567890', 4))


def gen_timestamp():
    # gera um datetime no formato yyyy-mm-dd hh:mm:ss.000000
    year = random.randint(1980, 2015)
    month = random.randint(1, 12)
    day = random.randint(1, 28)
    hour = random.randint(1, 23)
    minute = random.randint(1, 59)
    second = random.randint(1, 59)
    microsecond = random.randint(1, 999999)
    date = datetime.datetime(
        year, month, day, hour, minute, second, microsecond).isoformat(" ")
    return date


def gen_city():
    list_city = [
        [u'São Paulo', 'SP'],
        [u'Belém', 'PA'],
        [u'Rio de Janeiro', 'RJ'],
        [u'Goiânia', 'GO'],
        [u'Salvador', 'BA'],
        [u'Guarulhos', 'SP'],
        [u'Brasília', 'DF'],
        [u'Campinas', 'SP'],
        [u'Fortaleza', 'CE'],
        [u'São Luís', 'MA'],
        [u'Belo Horizonte', 'MG'],
        [u'São Gonçalo', 'RJ'],
        [u'Manaus', 'AM'],
        [u'Maceió', 'AL'],
        [u'Curitiba', 'PR'],
        [u'Duque de Caxias', 'RJ'],
        [u'Recife', 'PE'],
        [u'Natal', 'RN'],
        [u'Porto Alegre', 'RS'],
        [u'Campo Grande', 'MS']]
    return random.choice(list_city)





Atividade 3


import os,sys

import getpass


class conexaoDB: 

def conect( self, user, password, db, host="localhost", port="3306",comand="show databases"):

self.host = host

self.user = user

self.password = password 

self.port = port

self.comand = comand

self.db = db


os.system("mysql --host=%s --port=%s --user=%s --password=%s -e '%s' -D %s" %(host ,port ,user ,password,comand,db ))



>>> import ConexaoDB

>>> var = ConexaoDB.conecxaoBD()

>>> var.conect(password="****", user="root", db="merEstoque", host="localhost", port="3306",comand="show databases")



import ConexaoDB

var = ConexaoDB.conexaoDB()

var.conect(password="****", user="root", db="merEstoque", host="localhost", port="3306",comand="show databases")



comando = " select * from EMPRESAS "

host = "localhost"

usuario = "root"

password = getpass.getpass('Senha: ')

porta = "3306"

banco = "merEstoque"

conecta=conexaoDB()

conecta.conect(usuario,password,banco,host,porta,comando)#quantidade de arg e posicao

conecta.conect(usuario,password,banco)#quantidade minimo

conecta.conect(usuario, password, banco, comand="show tables")#arg nomeada*

conecta.conect(password="****", user="root", db="merEstoque", host="localhost", port="3306",comand="show databases")
